PLI - Invokes the PLI compiler
 
          The PLI command invokes the PL/I (F) compiler to compile programs
          in PL/I source language into machine code, and to provide program
          listings and diagnostics.
 
Format:-
 
              PLI          fnamel...fnameN   (option 1...option N)
 
 
 
     fnamel...fnameN     are the names of PLI files to be compiled.
                         A separate compilation is performed for each
                         filename specified.
 
     option 1...option N  are one or more of the options described below.
 
 Options:-
 
    Control Options:
 
    SIZE   nnnnnn  specifies the amount of main storage available for the
           nnnK    compilation.  nnnnnn specifies that nnnnnn bytes of main
           999999* storage are available; nnnK specifies that nnnK bytes of
                   main storage are available.  Leading zeroes need not be
                   specified.  999999 instructs the compiler to obtain as
                   much  main storage as possible.
 
    OPT    n        specifies the type of optimization required. "0" instructs
    n=0,1*,2        the compiler to keep object-program storage requirements
                    to a minimum at the expense of object-program execution
                    time;   1 causes object-program execution time to be
                    reduced at the expense of storage;  2  has the same effect
                    as 1, plus it requests the compiler to optimize the
                    machine instructions generated for certain types of DO-
                    loops and expressions in subscript lists.
 
 
    ST              requests the compiler to produce additional instructions
    STMT*           that allow statement numbers from the source program to
                    be included in diagnostic messages produced during execu-
                    tion of the compiled program.
 
    NOSTMT          suppresses the inclusion statement numbers in diagnostic
    NST             messages during program execution.
 
 
    OBJNM aaaaaaaa  allows the user to name the load module created for object
    N               decks used with the OS/360 Linkage Editor.  This option
                    has no meaning with the CMS loader.
 
    OBJIN           specifies that the compiled program is to be executed on
                    an IBM System/360 Model 91 or 195.
 
    OBJOUT*         Specifies that the compiled program is not to be executed
                    on an IBM System/360 Model 91 or 195.
 
    EXTDIC          causes the compiler to extend the size of the dictionary
    ED              by 1.5 times if the dictionary block size is 1K bytes, and
                    by 3.5 times if the block size is greater than 1K bytes.
 
    NOEXTDIC*       specifies that the compiler is to use the normal
    NED             dictionary.
 
    SYNCHKE        terminates the compilation if errors of severity ERROR or
    SKE            above are found during the syntax checking stages of com-
                   pilation.
 
    SYNCHKS         terminates the compilation if errors of severity SEVERE
    SKS             or above are found during the syntax checking stages of
                    compilation.
 
    SYNCHKT*        terminates the compilation immediately after an erro
    SKT             severity TERMINATION is encountered; therefore, in effect,
                    the option is turned off.
 
    MACRO           requests the compiler to invoke the compiler
    M               preprocessor.
 
    NOMACRO*        requests the compiler preprocessor not be
    NM              invoked.
 
    COMP*           requests the compiler to continue compiling the source
    C               module after the preprocessor phases.
 
    NOCOMP          requests the compiler not continue after the
    NC              preprocessor.
 
    MACDCK          requests the compiler to place the output from the pre-
    MD              processor in the TEXT file.
 
    NOMACDCK*       requests the output from the preprocessor not placed
    NMD             the TEXT file.
 
    Input Options:
 
    CHAR60          specifies that the source statements are written in the
    C60             PL/1 60-character set.
 
    CHAR48          specifies that the source statements are written in the
    C48             48-character set.  This option accepts source programs
                    written in either character set.
 
    BCD             specifies that source statements are represented in binary
    B               coded decimal (BCD).
 
    EBCDIC*         specifies that source statements are represented in
    EB              extended binary-coded-decimal interchange code.
 
    SORMGIN mm,nn,cc    specifies the extent of the input record that
    SM     1,72         contains  PL/I source statements.
                   mm represents the number of the
                   first character of the field containing source statements,
                   nn represents the number of the last character of the
                   source statement field, and cc represents the number of
                   the character containing the carriage control character.
                   cc must be outside the limits set by mm and nn.  The
                   default position of cc may be nullified by setting it
                   to 0.  Source statements generated by the preprocessor
                   have a source margin of 2,72.
 
    Output Options
 
    DECK*          specifies that the compiler output is to be placed in a
    D              TEXT file.
 
 
    NODECK         specifies that the compiler output is not to be placed
    ND             into the TEXT file.
 
    Listing Options:
 
    LINECNT xxx    specifies the number of lines to be included in each page
    LC    55       of a listing, including heading and blank lines.  The
                   default is 55 lines.
 
    OPLIST*        requests a list of the status of all compiler options
    OL             the start of the compilation.
 
    NOOPLIST       suppresses this list of options.
    NOL
 
    SOURCE2*       requests a listing of the PL/1 source statements
    S2             input to the preprocessor.
 
    NOSOURCE2      suppresses this listing of input to the preprocessor.
    NS2
 
    SOURCE*        requests a listing of the PL/1 source statements proce
    S              by the compiler.  The source statements are either those
                   of the original source program or the output from the pre-
                   processor.
 
    NOSOURCE       suppresses the listing of
    NS             source statements.
 
    NEST*          specifies that the source program listing indicate for
    NT             each statement the block and nesting level for DO-groups.
 
    NONEST         suppresses the indication of block and nesting level
    NNT            for DO-groups.
 
    ATR*           requests a table of source program identifiers and their
    A              attributes.  Attributes of precision (15,0) or less are
                   flagged '********'.  An Aggregate Length Table, giving
                   the length in bytes of all major structures and non-
                   structured arrays in the source program, is also produced.
 
    NOATR          suppresses the inclusion of source program identifiers and
    NA             their attributes in the LISTING.
 
    XREF           requests a cross-reference table of identifiers in the
    X              source program.  If  ATR  has also been specified, the two
                   tables are combined.  An Aggregate Length Table is produced.
 
    NOXREF         suppresses the cross-reference table.
    NX
 
    EXTREF         requests a listing of the external
    E              sumbol dictionary (ESD).
 
    NOEXTREF       suppresses the external symbol dictionary.
    NE
 
    LIST           requests a LISTING of the machine instructions generated
    L              by the compiler.
 
    NOLIST         suppresses a LISTING of the machine instructions generated
                   by the compiler.
 
    FLAGS          lists only severe and
    FS             termination errors.
 
    FLAGW          lists all
    FW             diagnostic messages.
 
    FLAGE          lists all diagnostic messages except 'warning'
    FE             messages.
 
    DUMP DP        requests a formatted listing in the LISTING file of the
                   compiler modules, compiler storage, and compiler control
                   blocks in the event of an unrecoverable error.
 
    CMS Options:
 
    PUNCH          specifies that the TEXT file produced by the compiler is
    PU             to be punched onto the offline punch.
 
    TDECK          specifies that the TEXT file produced by the compiler is
    TD             to be written onto a magnetic tape mounted at symbolic
                   address TAP2.
 
    PRINT          specifies that the LISTING file produced by the compiler
    P              is to be printed on the offline printer.
 
    NOPRINT        specifies that no LISTING file
    NP             is to be produced.
 
    TLIST          specifies that the LISTING file is to be written onto a
    TL             magnetic tape mounted at symbolic address TAP2.
 
    NODIAG         specifies that compiler diagnostics are not to be
    NDG            typed at the user's terminal.
 
    If neither P nor NP is specified, the LISTING file is placed on the
    same disk as the PL/1 source program.
 
    Usage:
 
    The PLI command compiles files of PL/I source language into
    machine-language object code.
    Input files must have a filetype of PLI and a record length less
    than 100 characters.
 
    The options governing compiler operation and output are specified
    in any order in a set of parentheses following the last filename.
    Any combination of options is valid.
 
    When conflicting options are specified, the last specified option is
    used.  Unsupported or misspelled options are ignored.  One set of
    options governs all compilations performed by one command.
    Each of the options has a default value which is selected when
    none is specified.
 
    These defaults are marked with a "*" in "Options" above.
 
    For a complete discussion of PL/I usage, refer to
 
    IBM System/360 System PLI/F Programmer's Guide GC28-6594
 
    and
 
    IBM System/360 Operating System PLI/F Language Reference Manual GC28-8201.
 
    An introduction to PL/I is provided in Manual GC28-6808, A PL/I Primer.
 
    There is also more information in PLICOMP MEMO U2 from with this help
    file is adapted.
 
